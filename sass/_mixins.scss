@use "sass:math";
@use "sass:string";

$font-size: 16px;

@function rem($pixel: $font-size) {
  $size: math.div($pixel, $font-size);
  @return #{$size}rem;
}

@mixin displayFlex($direction: false, $align, $justify, $gap: null) {
  display: flex;
  @if ($direction) {
    flex-direction: column;
  }
  align-items: $align;
  justify-content: $justify;
  gap: $gap;
}

@mixin button($outline: false, $radius: 50px, $box-shadow: true) {
  border-radius: $radius;
  @if ($outline) {
    border: 1px solid var(--primary-light-pink);
    color: var(--primary-light-pink);
    box-shadow: 0 0 0.1rem var(--primary-light-pink);

    &:is(:hover, :active) {
      box-shadow: 0 0 0.3rem;
    }
  } @else {
    border: none;
    background-color: var(--primary-pink);
    color: var(--neutral-very-pale-blue);
    @if ($box-shadow) {
      box-shadow: 0 0.2rem 0.5rem var(--neutral-gray);
    }
    &:is(:hover, :active) {
      background-color: var(--primary-light-pink);
    }
  }

  transition: 0.4s;
  text-transform: capitalize;
  cursor: pointer;
}

@mixin font(
  $family: var(--primary-font-family),
  $weight: var(--normal-weight),
  $size: $font-size
) {
  font: {
    family: $family;
    weight: $weight;
    size: rem($size);
  }
}

@mixin bgImage($url, $size) {
  content: "";
  position: absolute;
  z-index: 1;
  @if (string.index($url, "top")) {
    top: -#{rem($size)};
  }
  @if (string.index($url, "bottom")) {
    bottom: -#{rem($size)};
  }
  width: 100%;
  height: rem($size);
  background: {
    image: url(../images/bg-#{$url}.svg);
    repeat: no-repeat;
    position: center;
    size: 100% 100%;
  }
}
